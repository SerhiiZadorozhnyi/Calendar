{"version":3,"sources":["components/calendar/calendar.js","components/calendar/styled.js","components/calendar/index.js","App.js","index.js"],"names":["DAYS_IN_MONTH","WEEK_DAYS_FROM_MONDAY","Month","areEqual","a","b","getFullYear","getMonth","getDate","getMonthData","year","month","result","date","Date","daysInMonth","isLeapYear","getDaysInMonth","monthStartsOn","dayOfWeek","getDay","getDayOfWeek","day","i","j","undefined","BlockCalendar","styled","div","Block","CalendarHeader","header","CalendarButton","button","CalendarSelect","select","CalendarTable","table","CalendarTh","th","ButtonsBlock","ButtonSubmit","Calendar","state","props","currentDate","selectedDate","handlePrevMonthButtonClick","setState","handleNextMonthButtonClick","handleSelectChange","yearSelect","value","monthSelect","handleDayClick","onChange","stateSelect","handleDateChange","this","years","monthNames","weekDayNames","monthData","calendar","className","onClick","ref","element","map","name","index","week","classnames","toLocaleDateString","React","Component","defaultProps","Function","prototype","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f26100b8.chunk.js","sourcesContent":["const DAYS_IN_WEEK = 7;\r\n\r\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\nconst WEEK_DAYS_FROM_MONDAY = [6, 0, 1, 2, 3, 4, 5];\r\n\r\nconst Month = {\r\n    January: 0,\r\n    February: 1,\r\n    March: 2,\r\n    April: 3,\r\n    May: 4,\r\n    June: 5,\r\n    July: 6,\r\n    August: 7,\r\n    September: 8,\r\n    October: 9,\r\n    Novermber: 10,\r\n    December: 11\r\n};\r\n\r\nexport function areEqual(a, b) {\r\n    if (!a || !b) return false;\r\n\r\n    return (\r\n        a.getFullYear() === b.getFullYear() &&\r\n        a.getMonth() === b.getMonth() &&\r\n        a.getDate() === b.getDate()\r\n    );\r\n}\r\n\r\nexport function isLeapYear(year) {\r\n    return !((year % 4) || (!(year % 100) && (year % 400)));\r\n}\r\n\r\nexport function getDaysInMonth(date) {\r\n    const month = date.getMonth();\r\n    const year = date.getFullYear();\r\n    const daysInMonth = DAYS_IN_MONTH[month];\r\n    \r\n    if (isLeapYear(year) && month === Month.February) {\r\n        return daysInMonth + 1;\r\n    } else {\r\n        return daysInMonth;\r\n    }\r\n}\r\n\r\nexport function getDayOfWeek(date) {\r\n    const dayOfWeek = date.getDay();\r\n\r\n    return WEEK_DAYS_FROM_MONDAY[dayOfWeek];\r\n}\r\n\r\nexport function getMonthData(year, month) {\r\n    const result = [];\r\n    const date = new Date(year, month);\r\n    const daysInMonth = getDaysInMonth(date);\r\n    const monthStartsOn = getDayOfWeek(date);\r\n    let day = 1;\r\n\r\n    for (let i = 0; i < (daysInMonth + monthStartsOn) / DAYS_IN_WEEK; i++) {\r\n        result[i] = [];\r\n        \r\n        for (let j = 0; j < DAYS_IN_WEEK; j++) {\r\n            if ((i === 0 && j < monthStartsOn) || day > daysInMonth) {\r\n                result[i][j] = undefined;\r\n            } else {\r\n                result[i][j] = new Date(year, month, day++);\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import styled from \"styled-components\";\r\n\r\nconst BlockCalendar = styled.div`\r\n    width: calc(100% - 30%);\r\n    margin: auto;\r\n    border: 1px solid gray;\r\n    padding: 20px;\r\n    border-radius: 5px;\r\n`;\r\n\r\nconst Block = styled.div`\r\n    margin: auto;\r\n    border: 1px solid gray;\r\n    border-radius: 5px;\r\n`;\r\n\r\nconst CalendarHeader = styled.header`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 5px 5px;\r\n    background-color: #EBEBEB;\r\n    border-top-left-radius: 5px;\r\n    border-top-right-radius: 5px;\r\n`;\r\n\r\nconst CalendarButton = styled.button`\r\n    margin: 0px;\r\n    border-radius: 5px;\r\n    transition: 500ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n    :hover {\r\n        border: 1px solid #0081ff;\r\n        transition: 500ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    }\r\n`;\r\n\r\nconst CalendarSelect = styled.select`\r\n    margin: 0 4px;\r\n    transition: 500ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n    :hover {\r\n        border: 1px solid #0081ff;\r\n        transition: 500ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    }\r\n`;\r\n\r\nconst CalendarTable = styled.table`\r\n    table-layout: fixed;\r\n    border-collapse: separate;\r\n    border-spacing: 0;\r\n    margin: auto;\r\n    padding-top: 0px;\r\n    padding-bottom: 10px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    width: 100%;\r\n`;\r\n\r\nconst CalendarTh = styled.th`\r\n    vertical-align: middle;\r\n    text-align: center;\r\n    height: 36px;\r\n`;\r\n\r\nconst CalendarDay = styled.div`\r\n\r\n`;\r\n\r\nconst ButtonsBlock = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 5px;\r\n    margin-top: 15px;\r\n`;\r\n\r\nconst ButtonSubmit = styled.button`\r\n    transition: 500ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n    :hover {\r\n        transition: 500ms cubic-bezier(0.4, 0, 0.2, 1);\r\n        border: 1px solid #0081ff;\r\n    }\r\n\r\n    :active {\r\n        transition: 500ms cubic-bezier(0.4, 0, 0.2, 1);\r\n        background-color: #0081ff;\r\n        color: #fff;\r\n    }\r\n`;\r\n\r\nexport {\r\n    BlockCalendar,\r\n    Block,\r\n    CalendarHeader,\r\n    CalendarButton,\r\n    CalendarSelect,\r\n    CalendarTable,\r\n    CalendarTh,\r\n    CalendarDay,\r\n    ButtonsBlock,\r\n    ButtonSubmit\r\n}","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport * as calendar from './calendar';\r\n\r\nimport {\r\n    BlockCalendar,\r\n    Block,\r\n    CalendarHeader,\r\n    CalendarButton,\r\n    CalendarSelect,\r\n    CalendarTable,\r\n    CalendarTh,\r\n    CalendarDay,\r\n    ButtonsBlock,\r\n    ButtonSubmit\r\n} from './styled';\r\nimport './index.css';\r\n\r\nexport default class Calendar extends React.Component {\r\n    static defaultProps = {\r\n        date: new Date(),\r\n        years: [2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030,],\r\n        monthNames: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\r\n        weekDayNames: ['Пн', 'Вт', 'Ср', 'Чт' , 'Пт', 'Сб', 'Вс'],\r\n        onChange: Function.prototype\r\n    };\r\n\r\n    state = {\r\n        date: this.props.date,\r\n        currentDate: new Date(),\r\n        selectedDate: null\r\n    };\r\n\r\n    get year() {\r\n        return this.state.date.getFullYear();\r\n    }\r\n\r\n    get month() {\r\n        return this.state.date.getMonth();\r\n    }\r\n\r\n    get day() {\r\n        return this.state.date.getDate();\r\n    }\r\n\r\n    handlePrevMonthButtonClick = () => {\r\n        const date = new Date(this.year, this.month - 1);\r\n        \r\n        this.setState({ date });\r\n    };\r\n\r\n    handleNextMonthButtonClick = () => {\r\n        const date = new Date(this.year, this.month + 1);\r\n        \r\n        this.setState({ date });\r\n    };\r\n\r\n    handleSelectChange = () => {\r\n        const year = this.yearSelect.value;\r\n        const month = this.monthSelect.value;\r\n\r\n        const date = new Date(year, month);\r\n\r\n        this.setState({ date });\r\n    };\r\n\r\n    handleDayClick = date => {\r\n        this.setState({ selectedDate: date });\r\n        \r\n        this.props.onChange(date);\r\n    };\r\n\r\n\r\n\r\n    stateSelect = {\r\n\t\tdate: null\r\n\t};\r\n\r\n\thandleDateChange = date => this.setState({ date });\r\n    // handleDateChange = selectedDate => this.setState({ selectedDate })\r\n\r\n    render() {\r\n        const { years, monthNames, weekDayNames } = this.props;\r\n        const { currentDate, selectedDate } = this.state;\r\n\r\n        const monthData = calendar.getMonthData(this.year, this.month);\r\n\r\n        const { date } = this.state;\r\n        // const { dateSelect } = this.stateSelect;\r\n        \r\n\r\n        return (\r\n            <BlockCalendar>\r\n                <Block>\r\n                    <div className=\"calendar\">\r\n                        <CalendarHeader>\r\n                            <CalendarButton onClick={this.handlePrevMonthButtonClick}>{'<'}</CalendarButton>\r\n                            <div>\r\n                                <CalendarSelect\r\n                                    ref={element => this.monthSelect = element}\r\n                                    value={this.month}\r\n                                    onChange={this.handleSelectChange}\r\n                                >\r\n                                    {monthNames.map((name, index) =>\r\n                                        <option key={name} value={index}>{name}</option>\r\n                                    )}\r\n                                </CalendarSelect>\r\n\r\n                                <CalendarSelect\r\n                                    ref={element => this.yearSelect = element}\r\n                                    value={this.year}\r\n                                    onChange={this.handleSelectChange}\r\n                                >\r\n                                    {years.map(year =>\r\n                                        <option key={year} value={year}>{year}</option> \r\n                                    )}\r\n                                </CalendarSelect>\r\n                            </div>\r\n                            <button onClick={this.handleNextMonthButtonClick}>{'>'}</button>\r\n                        </CalendarHeader>\r\n\r\n                        <CalendarTable>\r\n                            <thead>\r\n                                <tr>\r\n                                    {weekDayNames.map(name =>\r\n                                        <CalendarTh key={name}>{name}</CalendarTh>    \r\n                                    )}\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {monthData.map((week, index) =>\r\n                                    <tr key={index} className=\"week\">\r\n                                        {week.map((date, index) => date ?\r\n                                            <td\r\n                                                key={index}\r\n                                                className={classnames('day', {\r\n                                                    'today': calendar.areEqual(date, currentDate),\r\n                                                    'selected': calendar.areEqual(date, selectedDate)\r\n                                                })}\r\n                                                onClick={() => this.handleDayClick(date)}\r\n                                            >{date.getDate()}</td>\r\n                                            :\r\n                                            <td key={index} />\r\n                                        )}\r\n                                    </tr> \r\n                                )}\r\n                            </tbody>\r\n                        </CalendarTable>\r\n                    </div>\r\n                </Block>\r\n                <ButtonsBlock>\r\n                    <select\r\n                        ref={element => this.monthSelect = element}\r\n                        value={this.month}\r\n                        onChange={this.handleSelectChange}\r\n                    >\r\n                        {monthNames.map((name, index) =>\r\n                            <option key={name} value={index}>{name}</option>\r\n                        )}\r\n                    </select>\r\n                    {date && <p>Выбранная дата: {date.toLocaleDateString()}</p>}\r\n\r\n                    <ButtonSubmit className='button__submit'>Submit</ButtonSubmit>\r\n                </ButtonsBlock>\r\n            </BlockCalendar>\r\n        );\r\n    }\r\n}","import React from 'react';\n\n// import Calendar from './components/Calendar';\n\nimport Calendar from './components/calendar'\n\nexport default class App extends React.Component {\n\tstate = {\n\t\tdate: null\n\t};\n\n\thandleDateChange = date => this.setState({ date });\n\n\trender() {\n\t\tconst { date } = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{/* {date && <p>Выбранная дата: {date.toLocaleDateString()}</p>} */}\n\n\t\t\t\t<Calendar\n\t\t\t\t\tonChange={this.handleDateChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}